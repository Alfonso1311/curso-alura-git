git init - inicializa un repositorio en Git
git status - muestra el estado de los archivos dentro del repositorio
git add . - agrega todos los archivos para commitear
git add nombreArchivo - agregar solo archivo especifico apra commitear
git commit -m "mensaje" - crear commit

git config --global user.email "email@gmail.com" - configurar email de github
git config --global user.name "name" - configurar nombre de github
    *****tambien puede utilizar los siguientes comandos para autenticarse
git config --local user.name "Tu nombre aquí"
git config --local user.email "Tu@email.aqui”

git config --list - enumera la configuración que está siendo utilizada
    ***ingresar letra q - permite salir de la lista de configuraciones anterior
git config user.name - muestra el nombre de usuario con el que está logueado
git config user.email - muestra el email con el que está logueado

git log - muestra el historial de commits
git log --oneline - muestra el historial de commits con poca información
git log -p - muestra el historial de commits con bastante información
git log --graph - muestra de forma gráfica los commits con las lineas de branch

crear archivo llamado .gitignore - archivo que almacena lo que va a ignorar
nombreCarpeta/ - para ignorar una carpeta
nombreArchivo.extension - para ignorar un archivo

git init --bare - crear un repositorio puro (que contiene solo las modificaciones de los archivos) sólo controla para acceder como remoto
    C:/Users/alfon/Downloads/Certificados ONE - ALURA/EJERCICIOS ONE/Git y GitHub_Controle y comparta su código/servidor/
git remote - listar todos los servidores remotos que nuestro repositorio reconoce
git remote add nombreServidor direccionServidor - agregar un servidor remoto a nuestro servidor local
    git add servidorlocal "C:/Users/alfon/Downloads/Certificados ONE - ALURA/EJERCICIOS ONE/Git y GitHub_Controle y comparta su código/servidor/"
git remote -v - muestra la dirección de nuestros servidores
    (fetch) Indica el lugar desde donde vamos a obtener la información del servidor remoto
    (push) Indica el lugar a donde vamos a mandar la información

git clone direccionServidor nombreCarpetaCrearYGuardar - clonar repositorio
    git clone "/C/Users/alfon/Downloads/Certificados ONE - ALURA/EJERCICIOS ONE/Git y GitHub_Controle y comparta su código/servidor/" proyecto
git push nombreServidor rama - enviar la información al servidor
    git push servidorlocal master
git remote rename rama nuevoNombre - renombrar una rama
    git remote rename origin servidorlocal
git pull nombreServidor rama - obtener la información que está alojada en el servidor
    git pull servidorlocal master
git remote add rama url - agregar un repositorio de github para almacenar la información
    git remote add origin https://github.com/Alfonso1311/curso-alura-git.git
    git push origin master

git branch - muestra en que rama estamos trabajando
git branch nombreRama - crea una rama nueva
git checkout nombreRama - cambiar de rama para trabajar
git checkout -b nombreRama - crear una rama y trabajar en ella

git merge nombreRama - en la rama que estamos trabajando incorporar los cambios realizados de la rama que le estamos indicando en le comando
    ***ingresar mensaje para el commit o ingresar :x para salir y guardar
git rebase nombreRama - actualizar los commits de master con los de otra rama
git stash list - lista de todos los stach pendientes
git stash apply numeroStash - seguir trabajando en el stash deseado
git stash pop - agarrar la ultima modificación agregada al stash y eliminarla de la lista